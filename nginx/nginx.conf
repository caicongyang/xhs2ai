server {
    listen 80;
    server_name xhs.lovezxr.org;
    
    # 访问日志配置
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    
    # 调试信息 - 记录根目录内容
    location = /debug {
        default_type text/plain;
        return 200 "Nginx configuration info:\nServer time: $time_local\nRequest: $request\nHost: $host\nX-Forwarded-Host: $http_x_forwarded_host\nX-Real-IP: $remote_addr\n";
    }
    
    # 前端应用 - 代理到静态文件服务器
    location / {
        proxy_pass http://web:3000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
        # 静态文件服务不需要处理大量请求头
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
        
        # 为Next.js静态导出的SPA添加try_files规则
        # 对于无扩展名的URI，添加.html扩展名
        try_files $uri $uri.html $uri/ /index.html;
    }

    # 明确处理子路由（确保直接访问二级页面时能找到正确的HTML文件）
    location ~ ^/[a-zA-Z0-9_-]+$ {
        proxy_pass http://web:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        try_files $uri $uri.html $uri/ /index.html;
    }

    # Backend API - 通过内部网络代理到后端服务
    location /api/ {
        proxy_pass http://server:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
        proxy_cache_bypass $http_upgrade;
    }

    # Health endpoint
    location /health {
        proxy_pass http://server:8000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
        proxy_cache_bypass $http_upgrade;
    }

    # 直接访问文件
    location /files/ {
        proxy_pass http://server:8000/api/files/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
        proxy_cache_bypass $http_upgrade;
    }
    
    # 静态文件访问
    location /outputs/ {
        alias /usr/share/nginx/html/outputs/;
        try_files $uri =404;
    }
    
    location /templates/ {
        alias /usr/share/nginx/html/templates/;
        try_files $uri =404;
    }
    
    # 为magazine_cards添加直接访问路径
    location /magazine_cards/ {
        alias /usr/share/nginx/html/magazine_cards/;
        try_files $uri =404;
    }
    
    # 为uploads添加直接访问路径
    location /uploads/ {
        alias /usr/share/nginx/html/uploads/;
        try_files $uri =404;
    }
    
    # 处理404错误
    error_page 404 = @frontend;
    
    location @frontend {
        proxy_pass http://web:3000;
        # 确保前端能处理所有路径
        try_files $uri $uri.html $uri/ /index.html;
    }
} 